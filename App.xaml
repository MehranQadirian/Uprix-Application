<Application x:Class="AppLauncher.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:AppLauncher" StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="PrimaryBlueColor" Color="#FF003554"/>
        <SolidColorBrush x:Key="SecundaryBlueColor" Color="#004B6A86"/>
        <SolidColorBrush x:Key="PrimaryTextColor" Color="White"/>
        <SolidColorBrush x:Key="SecundaryTextColor" Color="White"/>
        <SolidColorBrush x:Key="SecundaryGrayColor" Color="#bbc1d1"/>
        <SolidColorBrush x:Key="ActiveIndicatorBackground" Color="White"/>
        <SolidColorBrush x:Key="SelectedTileApps" Color="#FFC8A2A4"/>
        <SolidColorBrush x:Key="AnimationNavButtonForeground" Color="White"/>
        <SolidColorBrush x:Key="ComboBoxBackground" Color="{Binding BackgroundPrimary}"/>
        <SolidColorBrush x:Key="ComboBoxBorder" Color="{Binding BackgroundLightPart}"/>
        <SolidColorBrush x:Key="ComboBoxHoverBackground" Color="{Binding BackgroundSelectedTile}"/>
        <SolidColorBrush x:Key="ComboBoxDisabledBackground" Color="{Binding BackgroundSecundary}"/>
        <SolidColorBrush x:Key="ComboBoxDropdownBackground" Color="{Binding BackgroundPrimary}"/>
        <SolidColorBrush x:Key="ComboBoxItemHoverBackground" Color="{Binding BackgroundLightPart}"/>
        <SolidColorBrush x:Key="ComboBoxItemSelectedBackground" Color="{Binding BackgroundSelectedTile}"/><!-- Foreground Colors -->
        <SolidColorBrush x:Key="ComboBoxText" Color="{Binding ForegroundPrimary}"/>
        <SolidColorBrush x:Key="ComboBoxFocusBorder" Color="{Binding ForegroundPrimary}"/>
        <SolidColorBrush x:Key="ComboBoxArrow" Color="{Binding ForegroundSecundary}"/>
        <SolidColorBrush x:Key="ComboBoxDisabledText" Color="{Binding ForegroundStatus}"/>
        <SolidColorBrush x:Key="CaretBrushTextBoxes" Color="{Binding ForegroundPrimary}"/>
        <SolidColorBrush x:Key="BackgroundPrimary" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="BackgroundSecondary" Color="#F5F5F5"/>
        <SolidColorBrush x:Key="MenuIconColor" Color="#333333"/><!-- Global Performance Settings -->
        <Style TargetType="Border">
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
            <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
        </Style>
        <Style TargetType="Image">
            <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
        </Style><!-- Shadow Effects -->
        <DropShadowEffect x:Key="ComboBoxShadow" Color="#000000" Opacity="0.25" BlurRadius="12" ShadowDepth="3" Direction="270"/>
        <DropShadowEffect x:Key="ComboBoxDropdownShadow" Color="#000000" Opacity="0.35" BlurRadius="20" ShadowDepth="6" Direction="270"/><!-- ======================== TOGGLE BUTTON TEMPLATE ======================== -->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="40"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="8" Background="{DynamicResource ComboBoxBackground}" BorderBrush="{DynamicResource ComboBoxBorder}" BorderThickness="1.5">
                    <Border.RenderTransform>
                        <ScaleTransform x:Name="BorderScale" ScaleX="1" ScaleY="1"/>
                    </Border.RenderTransform>
                </Border>
                <Border Grid.Column="0" CornerRadius="8,0,0,8" Margin="1" Background="Transparent" BorderThickness="0"/>
                <Path x:Name="Arrow" Grid.Column="1" Fill="{DynamicResource ComboBoxArrow}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="12" Height="12" Stretch="Uniform" Data="M5.9 48.96 48.97 5.89c7.86-7.86 20.73-7.84 28.56 0l178.48 178.48L434.5 5.89c7.86-7.86 20.74-7.82 28.56 0l43.07 43.07c7.83 7.84 7.83 20.72 0 28.56l-192.41 192.4-.36.37-43.07 43.07c-7.83 7.82-20.7 7.86-28.56 0l-43.07-43.07-.36-.37L5.9 77.52c-7.87-7.86-7.87-20.7 0-28.56z" RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <RotateTransform x:Name="ArrowRotate" Angle="0"/>
                    </Path.RenderTransform>
                </Path>
            </Grid>
            <ControlTemplate.Triggers><!-- Hover Effect -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ComboBoxHoverBackground}"/>
                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ComboBoxFocusBorder}"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ComboBoxFocusBorder}"/>
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="BorderScale" Storyboard.TargetProperty="ScaleX" To="1.02" Duration="0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName="BorderScale" Storyboard.TargetProperty="ScaleY" To="1.02" Duration="0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="BorderScale" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName="BorderScale" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger><!-- Checked (Opened) Effect -->
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ComboBoxHoverBackground}"/>
                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ComboBoxFocusBorder}"/>
                    <Setter TargetName="Border" Property="Effect" Value="{StaticResource ComboBoxShadow}"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ComboBoxFocusBorder}"/>
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="ArrowRotate" Storyboard.TargetProperty="Angle" To="180" Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="ArrowRotate" Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger><!-- Disabled Effect -->
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource ComboBoxDisabledBackground}"/>
                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ComboBoxDisabledBackground}"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ComboBoxDisabledText}"/>
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate><!-- ======================== TEXTBOX TEMPLATE ======================== -->
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="8,0,0,8" Padding="12,10">
                <Border.Effect>
                    <DropShadowEffect Color="{Binding Source={StaticResource ComboBoxFocusBorder}, Path=Color}" Opacity="0" BlurRadius="12" ShadowDepth="0" x:Name="FocusGlow"/>
                </Border.Effect>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxFocusBorder}"/>
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Opacity)" To="0.4" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="(Border.Effect).(DropShadowEffect.Opacity)" To="0" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate><!-- ======================== MAIN COMBOBOX STYLE ======================== -->
        <Style x:Key="DarkComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="MinWidth" Value="150"/>
            <Setter Property="MinHeight" Value="40"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Foreground" Value="{DynamicResource ComboBoxText}"/>
            <Setter Property="Background" Value="{DynamicResource ComboBoxBackground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorder}"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="Padding" Value="12,10"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="12,10,40,10" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0" Focusable="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Foreground="{TemplateBinding Foreground}" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" Padding="{TemplateBinding Padding}" CaretBrush="{DynamicResource CaretBrushTextBoxes}"/>
                            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="{DynamicResource ComboBoxDropdownBackground}" BorderBrush="{DynamicResource ComboBoxFocusBorder}" BorderThickness="1.5" CornerRadius="8" Margin="0,6,0,0" Effect="{StaticResource ComboBoxDropdownShadow}">
                                        <ScrollViewer Margin="6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="False">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource ComboBoxDisabledText}"/>
                                <Setter Property="Background" Value="{DynamicResource ComboBoxDisabledBackground}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxDisabledBackground}"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,6,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="True">
                                <Setter Property="IsTabStop" Value="False"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxFocusBorder}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style><!-- ======================== COMBOBOXITEM STYLE ======================== -->
        <Style x:Key="DarkComboBoxItem" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Foreground" Value="{DynamicResource ComboBoxText}"/>
            <Setter Property="Padding" Value="12,10"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Border" Padding="{TemplateBinding Padding}" Background="Transparent" CornerRadius="6" Margin="2" SnapsToDevicePixels="True">
                            <Border.RenderTransform>
                                <TranslateTransform x:Name="ItemTranslate" X="0"/>
                            </Border.RenderTransform>
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
                        </Border>
                        <ControlTemplate.Triggers><!-- Hover Effect -->
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ComboBoxItemHoverBackground}"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ItemTranslate" Storyboard.TargetProperty="X" To="6" Duration="0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ItemTranslate" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger><!-- Selected Effect -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ComboBoxItemSelectedBackground}"/>
                                <Setter Property="Foreground" Value="{DynamicResource ComboBoxFocusBorder}"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                            </Trigger><!-- Disabled Effect -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource ComboBoxDisabledText}"/>
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border" Background="White" BorderBrush="#E0E0E0" BorderThickness="1,1,1,0" CornerRadius="5,5,0,0" Margin="2,0" Padding="15,10">
                            <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#2196F3"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#E3F2FD"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="#1976D2"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TabControl">
            <Setter Property="Background" Value="{DynamicResource SecundaryBlueColor}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="15"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel Grid.Row="0" Background="Transparent" IsItemsHost="True" HorizontalAlignment="Center"/>
                            <Border Grid.Row="1" CornerRadius="15" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                                <ContentPresenter ContentSource="SelectedContent" SnapsToDevicePixels="True" Margin="{TemplateBinding Padding}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MenuButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="15,0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Tag" Value="Inactive"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid><!-- Active Indicator Line -->
                            <Border x:Name="ActiveIndicator" Width="5" Height="0" Background="{DynamicResource ActiveIndicatorBackground}" HorizontalAlignment="Left" VerticalAlignment="Center" CornerRadius="0 5 5 0" Margin="-1,0,0,0" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="IndicatorScale" ScaleY="0"/>
                                </Border.RenderTransform>
                            </Border><!-- Button Content -->
                            <Border x:Name="ButtonBorder" Background="Transparent" CornerRadius="8" Margin="10,2" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="ButtonScale" ScaleX="1" ScaleY="1"/>
                                </Border.RenderTransform>
                                <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers><!-- Active State with Animation -->
                            <Trigger Property="Tag" Value="Active">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="White" Duration="0:0:0.4">
                                                <ColorAnimation.EasingFunction>
                                                    <BackEase EasingMode="EaseOut"/>
                                                </ColorAnimation.EasingFunction>
                                            </ColorAnimation>
                                            <ThicknessAnimation Storyboard.TargetName="ButtonBorder" Storyboard.TargetProperty="Margin" To="10,2,2,2" Duration="0:0:0.4">
                                                <ThicknessAnimation.EasingFunction>
                                                    <BackEase EasingMode="EaseOut"/>
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation><!-- Active Indicator Line Animation -->
                                            <DoubleAnimation Storyboard.TargetName="ActiveIndicator" Storyboard.TargetProperty="Height" To="50" Duration="0:0:0.5">
                                                <DoubleAnimation.EasingFunction>
                                                    <BackEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Storyboard.TargetName="IndicatorScale" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.4">
                                                <DoubleAnimation.EasingFunction>
                                                    <BackEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="White" Duration="0:0:0.3">
                                                <ColorAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseInOut"/>
                                                </ColorAnimation.EasingFunction>
                                            </ColorAnimation>
                                            <ThicknessAnimation Storyboard.TargetName="ButtonBorder" Storyboard.TargetProperty="Margin" To="10,2,5,2" Duration="0:0:0.3">
                                                <ThicknessAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseInOut"/>
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation><!-- Active Indicator Line Disappear Animation -->
                                            <DoubleAnimation Storyboard.TargetName="IndicatorScale" Storyboard.TargetProperty="ScaleY" To="0" Duration="0:0:0.3">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Storyboard.TargetName="ActiveIndicator" Storyboard.TargetProperty="Height" To="0" Duration="0:0:0.3">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsPressed" Value="True"/>
                                    <Condition Property="Tag" Value="Inactive"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ButtonBorder" Storyboard.TargetProperty="Background.Color" To="#FF6D8E8A" Duration="0:0:0.2">
                                                <ColorAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseIn"/>
                                                </ColorAnimation.EasingFunction>
                                            </ColorAnimation>
                                            <DoubleAnimation Storyboard.TargetName="ButtonScale" Storyboard.TargetProperty="ScaleX" To="0.93" Duration="0:0:0.05"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonScale" Storyboard.TargetProperty="ScaleY" To="0.93" Duration="0:0:0.05"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ButtonBorder" Storyboard.TargetProperty="Background.Color" To="Transparent" Duration="0:0:0.2">
                                                <ColorAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseIn"/>
                                                </ColorAnimation.EasingFunction>
                                            </ColorAnimation>
                                            <DoubleAnimation Storyboard.TargetName="ButtonScale" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonScale" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HamburgerButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="humberBorder" Background="{TemplateBinding Background}" CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsPressed" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="humberBorder" Storyboard.TargetProperty="Background.Color" To="#FF6D8E8A" Duration="0:0:0.2">
                                                <ColorAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseIn"/>
                                                </ColorAnimation.EasingFunction>
                                            </ColorAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="humberBorder" Storyboard.TargetProperty="Background.Color" To="Transparent" Duration="0:0:0.2">
                                                <ColorAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseIn"/>
                                                </ColorAnimation.EasingFunction>
                                            </ColorAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PathHoverStyle" TargetType="Path">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Button}}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#CCCDD7CB" Duration="0:0:0.3" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#FFF" Duration="0:0:0.3" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="StarInactivePathStyle" TargetType="Path">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Button}}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="Gold" Duration="0:0:0.3" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" FrameworkElement.FlowDirection="RightToLeft"/>
                                <ColorAnimation To="Gold" Duration="0:0:0.3" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" FrameworkElement.FlowDirection="RightToLeft"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="White" Duration="0:0:0.3" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"/>
                                <ColorAnimation To="White" Duration="0:0:0.3" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="StarActivePathStyle" TargetType="Path">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Button}}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="Red" Duration="0:0:0.3" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" FrameworkElement.FlowDirection="RightToLeft"/>
                                <ColorAnimation To="Red" Duration="0:0:0.3" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)" FrameworkElement.FlowDirection="RightToLeft"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="Gold" Duration="0:0:0.3" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"/>
                                <ColorAnimation To="Gold" Duration="0:0:0.3" Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" x:Key="ModernTileButton">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" CornerRadius="14" Background="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="1.1" Duration="0:0:0.25" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation To="1.1" Duration="0:0:0.25" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="1" Duration="0:0:0.25" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation To="1" Duration="0:0:0.25" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="ModernTileButtonSelected">
            <Setter Property="Background" Value="#0C0066"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" CornerRadius="14" RenderTransformOrigin="0.5,0.5" Background="{DynamicResource SelectedTileApps}">
                            <Border.Effect>
                                <DropShadowEffect x:Name="borderGlow" Color="#00F7F3" BlurRadius="25" ShadowDepth="0" Opacity="0.6"/>
                            </Border.Effect>
                            <Border.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="borderGlow" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3" AutoReverse="False" FillBehavior="HoldEnd"/>
                                            <DoubleAnimation Storyboard.TargetName="borderGlow" Storyboard.TargetProperty="BlurRadius" To="35" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="borderGlow" Storyboard.TargetProperty="Opacity" To="0.6" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetName="borderGlow" Storyboard.TargetProperty="BlurRadius" To="25" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Border.Triggers>
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation To="1.1" Duration="0:0:0.25" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"/>
                                            <DoubleAnimation To="1.1" Duration="0:0:0.25" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="AnimatedNavButton">
            <Setter Property="Background" Value="#2E2E3E"/>
            <Setter Property="Foreground" Value="{DynamicResource AnimationNavButtonForeground}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize" Value="16"/><!-- اندازه اولیه فونت -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" CornerRadius="50" Background="Transparent">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Border.Effect>
                                <DropShadowEffect x:Name="dropShadow" Color="#FFF" Opacity="0" ShadowDepth="0" BlurRadius="1"/>
                            </Border.Effect>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard><!-- انیمیشن Opacity برای DropShadow -->
                                            <DoubleAnimation Storyboard.TargetName="dropShadow" Storyboard.TargetProperty="Opacity" To="5" Duration="0:0:0.1"/><!-- بزرگ شدن فونت +10% -->
                                            <DoubleAnimation Storyboard.TargetProperty="FontSize" To="17.6" Duration="0:0:0.1"/><!-- 16 * 1.1 = 17.6 -->
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="dropShadow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.1"/><!-- بازگشت اندازه فونت به حالت اولیه -->
                                            <DoubleAnimation Storyboard.TargetProperty="FontSize" To="16" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="IconButton">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Border.Effect>
                                <DropShadowEffect x:Name="dropShadow" Color="Black" Opacity="0.5" ShadowDepth="0" BlurRadius="1"/>
                            </Border.Effect>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="dropShadow" Storyboard.TargetProperty="Opacity" To="0.3" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="dropShadow" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="TextButton">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Border.Effect>
                                <DropShadowEffect x:Name="dropShadow" Color="White" Opacity="0.5" ShadowDepth="0" BlurRadius="4"/>
                            </Border.Effect>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#4C454A35" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="dropShadow" Storyboard.TargetProperty="Opacity" To="0.3" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="White" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="dropShadow" Storyboard.TargetProperty="Opacity" To="0.2" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Border" x:Key="BorderSearchBox">
            <Setter Property="CornerRadius" Value="19"/>
        </Style>
        <Style TargetType="Border" x:Key="SimpleBorderSearchBox">
            <Setter Property="CornerRadius" Value="4"/>
        </Style>
    </Application.Resources>
</Application>